
Challenge 3: Concurrent Prime Number Finder
Write a Go program that finds and prints all prime numbers in a given range concurrently. 
The program should accept a range of numbers, divide the range into segments, and use 
goroutines to check for prime numbers within each segment. 
Print the prime numbers as they are discovered.

Input:
A range of numbers, e.g., from 1 to 100.

Desired Output:
Prime numbers in the range 1-100:
2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97


Challenge 4: Concurrent Word Count
Write a Go program that reads multiple text files concurrently, counts the number of 
words in each file, and reports the results.

Input:
Three text files with content.

Desired Output:
File 1: 100 words
File 2: 85 words
File 3: 120 words


Challenge: Bank Account Transactions with Mutex
Title: Simulate bank account transactions with Mutex.

Description: Create a Go program that simulates bank account transactions by multiple concurrent goroutines. Each goroutine represents a customer and can either deposit or withdraw a random amount of money from the account. Use a Mutex to protect the shared bank account data. Ensure that the account balance is updated correctly and does not go negative.

Input: Number of customers, initial account balance, and the number of transactions each customer should perform.

Desired Output: The final balance of the bank account after all transactions.

Correct Output:
Final Balance: $5325.50

Wrong Output:
Final Balance: $-126.75 (due to data races)