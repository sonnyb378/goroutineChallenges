
Challenge 1: Simple Parallel Summation
Write a Go program that calculates the sum of all elements in a large array 
concurrently using goroutines.

Input:
data := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}

Desired Output:
Sum: 55


Challenge 2: Concurrent Factorial Calculator
Write a Go program that calculates the factorial of a given number using a 
separate goroutine for the calculation.

Input:
n := 5

Desired Output:
Factorial of 5 is 120


Challenge 7: Implement a concurrent counter using a Mutex.
Description: Write a Go program that creates multiple goroutines to increment a shared counter concurrently using a Mutex. The program should increment the counter a specified number of times and ensure that the counter is protected from data races using a Mutex. At the end of the program, print the final value of the counter.

Input: Number of goroutines and the number of times each goroutine should increment the counter.

Desired Output: The final value of the counter after all goroutines have finished.

Correct Output:
Counter Value: 10000

Wrong Output:
Counter Value: 9900 (due to data races)